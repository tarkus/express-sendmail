// Generated by CoffeeScript 1.7.1
var filenames, fs, jade, mailer, path, settings, templates, transport, _;

fs = require('fs');

path = require('path');

jade = require('jade');

mailer = require('nodemailer');

_ = require('underscore');

settings = {};

templates = {};

filenames = {};

transport = null;

exports.send = function(mail, options, variables, done) {
  var defaults, html_mail, text_mail;
  defaults = {
    from: options.sender || settings.sender
  };
  if (typeof variables === 'function') {
    done = variables;
    variables = {};
  }
  options = _.extend(options, defaults);
  if (options.to == null) {
    return callback("No Recipient");
  }
  if (templates["" + mail + ".txt"] == null) {
    return callback("No Such Mail");
  }
  if (!options.subject) {
    if (variables.t) {
      options.subject = variables.t("mailer." + mail + ".subject");
    }
  }
  if (options.text || options.html) {
    return transport.sendMail(options, callback);
  }
  text_mail = function(callback) {
    if (!filenames["" + mail + ".txt"]) {
      return callback();
    }
    variables.filename = filenames["" + mail + ".txt"];
    return jade.render(templates["" + mail + ".txt"], variables, function(err, text) {
      if (err) {
        return callback(err);
      }
      options.text = text;
      return callback();
    });
  };
  html_mail = function(callback) {
    if (!filenames["" + mail + ".html"]) {
      return callback();
    }
    variables.filename = filenames["" + mail + ".html"];
    return jade.render(templates["" + mail + ".html"], variables, function(err, html) {
      if (err) {
        return callback(err);
      }
      options.html = html;
      return callback();
    });
  };
  return text_mail(function() {
    return html_mail(function() {
      return transport.sendMail(options, done);
    });
  });
};

exports.configure = function(_options) {

  /*
    smtp:
      service: "Mandrill"
      auth:
        user: "tarkus"
        pass: "password"
    sender: "Tarkus <hello@tarkus.im>"
    view_path: "views/mailer"
   */
  var file, files, fullpath, options, _i, _len;
  options = _.extend(settings, _options);
  if (!settings.view_path) {
    throw new Error("view_path must be set");
  }
  files = fs.readdirSync(settings.view_path);
  if (files) {
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      fullpath = path.join(options.view_path, file);
      templates[path.basename(file, '.jade')] = fs.readFileSync(fullpath).toString();
      filenames[path.basename(file, '.jade')] = fullpath;
    }
  }
  if (settings.smtp) {
    return transport = mailer.createTransport('SMTP', settings.smtp);
  } else {
    return transport = mailer.createTransport('Stub');
  }
};
