// Generated by CoffeeScript 1.7.1
var config, filenames, fs, jade, mailer, path, send_function, templates, transport, _;

fs = require('fs');

path = require('path');

jade = require('jade');

mailer = require('nodemailer');

_ = require('underscore');

config = {};

templates = {};

filenames = {};

transport = null;

send_function = function(req, res, next) {
  return function(mail, options, variables, callback) {
    var defaults;
    defaults = {
      from: config.sender || "<noreply@example.com>"
    };
    if (typeof variables === 'function') {
      callback = variables;
      variables = {};
    }
    options = _.extend(options, defaults);
    if (options.to == null) {
      return callback("No Recipient");
    }
    if (templates["" + mail + ".txt"] == null) {
      return callback("No Such Mail");
    }
    if (!options.subject) {
      if (res.locals.t) {
        options.subject = res.locals.t("mailer." + mail + ".subject");
      }
    }
    if (options.text || options.html) {
      return transport.sendMail(options, callback);
    }
    variables.t = res.locals.t;
    variables.filename = filenames["" + mail + ".txt"];
    return jade.render(templates["" + mail + ".txt"], variables, function(err, text) {
      if (err) {
        return callback(err);
      }
      options.text = text;
      if (!templates["" + mail + ".html"]) {
        return transport.sendMail(options, callback);
      }
      variables.filename = filenames["" + mail + ".html"];
      return jade.render(templates["" + mail + ".html"], variables, function(err, html) {
        if (err) {
          return callback(err);
        }
        options.html = html;
        return transport.sendMail(options, callback);
      });
    });
  };
};

exports.connect = function(_config) {

  /*
    smtp:
      service: "Mandrill"
      auth:
        user: "tarkus"
        pass: "password"
    sender: "Tarkus <hello@tarkus.im>"
    view_path: "views/mailer"
   */
  var file, files, fullpath, _i, _len;
  config = _.extend(config, _config);
  if (!config.view_path) {
    throw new Error("view_path must be set");
  }
  files = fs.readdirSync(config.view_path);
  if (files) {
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      fullpath = path.join(config.view_path, file);
      templates[path.basename(file, '.jade')] = fs.readFileSync(fullpath).toString();
      filenames[path.basename(file, '.jade')] = fullpath;
    }
  }
  if (config.smtp) {
    transport = mailer.createTransport('SMTP', config.smtp);
  } else {
    transport = mailer.createTransport('Stub');
  }
  return function(req, res, next) {
    res.sendmail = send_function(req, res, next);
    return next();
  };
};
